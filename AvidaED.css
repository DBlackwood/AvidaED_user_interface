/*
 * This file is provided for application-specific style rules.
 *
 * By default, Maqetta includes this CSS file within HTML pages
 * authored in Maqetta.
 *
 * This file is typically used to override style rules found in
 * theme CSS files. For example, suppose the theme CSS file has:
 *
 * .claro .dijitButton .dijitButtonNode {
 *		padding:2px 4px 4px 4px;
 * }
 *
 * But for your application suppose you want to tighten the padding
 * for buttons. Then, you might include the following style rule
 * in this file (assuming that you accept Maqetta's default where
 * id 'myapp' is present on the BODY element, and assuming
 * that you are using the 'claro' theme):
 *
 * #myapp.claro .dijitButton .dijitButtonNode {
 *		padding:1px 3px 3px 3px;
 * }
 *
 * Because of CSS precedence rules (see [1]), the above style rule
 * (which begins with #myapp.claro) will 'win the cascade' versus
 * the style rule from the theme CSS file due to the use of the
 * ID select (#myapp), which has higher specificity than the class
 * selectors used throughout the Claro theme.
 *
 * [1] http://www.w3.org/TR/CSS21/cascade.html#cascade
 */
html, body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding:0;
}

.bit32 {
  font-family: Courier New;
  font-size: .8em;
  text-height: .2em;
}

p {
  margin-top: 0px;
  margin-bottom: 0px;
}

li {
  margin: 0px 0px 0px 0px;
}

ul {
  margin-top: 0px;
  margin-bottom: 0px;
}

h2, h3 {
  margin-top: 0px;
  margin-bottom: 0px;
  margin-left: 10px;
}

div {
  margin: 0
}

.notSeen{
  margin: 0;
  display: none;
}

#anlDndChart {
  width: 100%;
  height: 100%;
}

div.odd {
  background-color: #E8E8E8;
  padding: 0.5em 0.3em 1em 0.3em;
  clear: left;
}

.even {
  background-color: #CDCDCD;
  padding: 0.5em 0.3em 1em 0.3em;
  clear: left;
}

.sugarOnOffGrid {
  display: inline-grid;
  grid-template-columns: 17% 22% 19% 23% 19%;
  background-color: #CCCCCC;     /* #2196F3;  blue */
  /*  justify-content: space-evenly;  */
  width: 100%;
}

.grid-sugarOnOff-item {
  background-color: #DDDDDD;
  border: 0px;
  text-align: left;
  padding: 1px 1px;
}

.lftWide {
  float: left;
  width: 90%;
}

.ritThin {
  float: right;
  width: 10%;
}

.fltLeft {
  float: left;
}

.lftmargin {
  float: left;
  clear: left;
}

div.popStatsTitle {
  overflow: visible;
  background-color:#ffffff;
  min-width: 170px;
  text-align:left;
  font-weight: bold;
}

div.popStatsTableSot {
  min-width: 169px;
  background-color: #DDD;
}

div.popStatsTablePop {
  min-width: 168px;
  background-color: #DDD;
}

.noWrapF {
  text-align:center;
  font-weight: bold;
  max-height: 15px;
}

.noWrapN {
  text-align:left;
  font-weight: bold;
  max-height: 15px;
  max-width: 99%;
  overflow: hidden;
}

.sotL {
  text-align:left;
  max-height: 15px;
  max-width: 99%;
  overflow: hidden;
}

.noWrapRn {
  text-align:right;
  max-height: 15px;
  max-width: 99%;
  overflow: hidden;
  font-family: monospace;
  font-size: 1.2em;

}

.noWrap1 {
  text-align:center;
  max-height: 15px;
}

.noWrapTitle {
  text-align:center;
  font-weight: bold;
  max-height: 15px;
}

#muteSlide {
  float: left;
  background-color: yellow;
}

#mutePopInput {
  float: left;
}

#mRate {
  float: left;
}

#muteSlidedojo {
  float: left;
}

button {display:inline;}

.bitButtonOff {
  background-color: #fff;
  color: #000;
  font: 11px sans-serif;
  text-decoration: none;
  border: 1px solid #000;
  border-color: #aaa;
  border-radius: 5px;
  padding: 0px 00px 2px 0px;
  height: 15px;
  width: 45px;
  display: block;
  text-align: center;
}

.bitButtonOn {
  background-color: #fff;
  color: #00f;
  font: 11px sans-serif;
  text-decoration: none;
  color: #00bb00;
  border: 1px solid #000;
  border-color: #00dd00;
  border-radius: 5px;
  padding: 0px 00px 2px 0px;
  height: 15px;
  width: 45px;
  display: block;
  text-align: center;
}

.resourceButton {
  width: 100px
}

.dojoDndItem {
  padding: 3px;
}

.dojoDndItemOver {
  background-color: #EDEDED;
  cursor: pointer;
}

.dojoDndItemSelected {
  background-color: #5BBDEA;
  color: #444444;
}

.dojoDndItemAnchor {
  background-color: #5BBDEA;
  color: black;
}

.dojoDndItemOver .dojoDndItemSelected {
  background-color: #EDEDED;
}

.dojoDndItemOver .dojoDndItemAnchor {
  background-color: #EDEDED;
}

.dojoDndItemBefore {
  border-top: 2px solid #336699;
}

.dojoDndItemAfter {
  border-bottom: 2px solid #336699;
}

.dojoDndAvatar {
  border: 2px solid #CCCCCC;
}

.dojoDndAvatarHeader {
  background-color: #AAAAAA;
}

.dojoDndAvatarItem {
  background-color: #FFFFFF;
  border-bottom: 1px solid #666666;
}

.dojoDndAvatarItem .itemText {
  font-size: 120%;
}

.container {
  min-height: 10px;
  width: 100%;
}

.ancestorContainer {
  min-height: 30px;
  width: 200px;
  border: 1px solid black;
  background-color: white;
}

.popContainer {
  float: left;
  min-height: 1.6em;
  min-width: 6em;
  border: 1px solid #CCCCCC;
  display: block;
  overflow: visible;
}

/* dojo css */

.dijitBorderContainer {
  padding: 1px;
}

.claro
.dijitBorderContainer-dijitContentPane {
  background-color: #ffffff;
  padding: 1px 1px 6px 1px;
  margin: 1px
}

table.topSotTable {
  white-space: nowrap;
  border-collapse: collapse;
  /* margin: auto;   /* centers the table */
  border: 0;
  padding: 0;
  table-layout: auto;
}
.topSotTable th, .top td {  padding: 0px;  }
.topTable tr *:nth-child(1) {
  text-align: right;
}
.topSotTable tr *:nth-child(2) {
  width: 40px;
}

.topSotTable tr:nth-child(odd) {background: #D7D7D7}
.topSotTable tr:nth-child(even) {background: #DDDDDD}

table.topPopTable {
  border-collapse: collapse;
  border: 0;
  padding: 0;
  white-space: nowrap;
}
.topPopTable tr *:nth-child(1) {
  text-align: right;
  font-size: 1em;
}
.topPopTable tr *:nth-child(2) {
  text-align: left;
  font-family: monospace;
  font-size: 1.2em;
  width: 40px;
}
.topPopTable tr:nth-child(odd) {background: #D7D7D7}
.topPopTable tr:nth-child(even) {background: #DDDDDD}

table.botSotTable {
  border: 0;
  padding: 0;
  border-collapse: collapse;
}

.botSotTable tr:nth-child(even) {background: #FAFAFA}

.botSotTable th { font-weight: bold}
.botSotTable td {  line-height: 15px;  }   /* added in javascript ??? */

.botSotTable tr *:nth-child(1) { text-align: center;  }
.botSotTable tr *:nth-child(2) {  text-align: right;  }
.botSoyTable tr *:nth-child(3) {  width: 80%;  }

table.botPopTable {
/*  margin: auto;  /* centers table in div */
  border: 0;
  padding: 0;
  border-collapse: collapse;
  table-layout: auto;
  /*  width: 100%;  */
}

.botPopTable tr:nth-child(even) {background: #FAFAFA}
.botPopTable th {
  font-weight: bold;
}
.botPopTable td {  line-height: 15px;  }   /* added in javascript */

.botPopTable tr *:nth-child(2) {  text-align: right;  }
.botPopTable tr *:nth-child(3) {  width: 80%;  }

/**********************************************************************************************************************/
/* the class model is used to create dialog boxes without dojo                                                        */
/**********************************************************************************************************************/
/* https://www.w3schools.com/howto/howto_css_modals.asp                                                               */
/* https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_modal                                                */
/* 
/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background: rgb(0,0,0); /* Fallback color */
    background: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
    background: #fefefe;
    margin: auto;
    padding: 0px;
    border: 1px solid #888;
    width: 80%;
}

.modal-header {
    padding: 8px 8px;
    font-size: 130%;
    font-weight: bold;
    background: lightgray;
    color: black;
}

.modal-body {padding: 8px 8px;}

.modal-footer {
    padding: 8px 8px;
    background: lightgray;
    color: black;
}
/************************************************************************************************* end of model class */                                                                         */

/*****************************************************************************************************/
/* mute organism settings */

  .muteOrgHolder{
    flex: 1;          /* supposed to expand to fill remainting space, but not working */
    background: #CCCCCC;
    padding: 1em 0.5em 2em 0.5em;      /* top, right, bottom, left;  right and left were 0.3 before*/
  }

  #muteOrgTextHolder{
    background: inherit;
    padding: 10px 0px;
  }
  #muteOrgSlideHolder{
    background-color: inherit;
    width: 100%;
    height: 450px;
  }
  
  #orgMuteSlide {
  display: block; 
  /* height: 400px;  */
  width:200px;
  vertical-align: middle; 
  padding: 20px auto;
  margin: auto; 
  background: #888;
  }

  #orgMuteInput{
    width: 50px; height:1em;
  }


/*****************************************************************************************************/
/* mute population settings */

.muteInputClass{
  width:70px;
  height:20px;
  margin: 0px 2px;     /* top right bottom left  */   /*top left/right bottom */ /*top/bottom  left/right */
  /* padding: 0px 0px;   /* top right bottom left  */  /* box padding border margin outside now */
  display: inline-block; 
  /*background: yellow; */
  float: left;
  vertical-align: middle;
}

.mutePopSlideClass{
  display: block;
  height: 10px;
  width: 95%;
  vertical-align: middle; 
  background: #666; 
}
#mutePopInputHolder { grid-area: mutePopInput; }
#mutePopSlideHolder { grid-area: mutePopSlide; width: 100%; place-self: center; }
#mutePopErrorHolder { grid-area: mutePopError; }
#mutePopHeading { grid-area: mutePopHead; }

#mutePopContainer {
  display: grid;
  grid-template-areas: 'mutePopHead  mutePopError'
                       'mutePopInput mutePopSlide'; 
  grid-template-columns: 131px auto;
  grid-template-rows: 20;
  width: 100%;
  grid-column-gap: 5px;
  grid-row-gap: 5px;
}

/*****************************************************************************************************/
/* World size section based on flexbox */

#worldCellsHolder { flex: auto; order: 5; height: 20 px; }

.sizeInputClass{
  width:30px;
  height:20px;
  margin: 0px 2px;     /* top right bottom left  */   /*top left/right bottom */ /*top/bottom  left/right */
  /* padding: 0px 0px;   /* top right bottom left  */  /* box padding border margin outside now */
  display: inline-block; 
  /*background: yellow; */
  float: left;
  vertical-align: middle;
}

#worldCols { flex: 0; order: 1; height: 20 px; width: 34px; }
#colPopWrap { flex: 0; order: 2; height: 20 px; min-width: 68px; }
#worldRows { flex: 0; order: 3; height: 20 px; width: 34px; }
#rowPopWrap { flex: 0; order: 4; height: 20 px; width: 48px; }
#worldSpace { flex: 0; order: 5; height: 20 px; min-width: 116; }

#sizePopContainer { 
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  width: 100%;
  align-items: center;
}

/*****************************************************************************************************/
/* World size section based on grid 

#colPopWrap { position:relative; top: 4px; }
#rowPopWrap { position:relative; top: 4px; }
#sizeCells  { position:relative; top: 4px; }

#worldSpace { grid-area: worldSpace; background-color: aliceblue; }
#worldSizeLabelHolder { grid-area: worldSizeLabel; background-color: aliceblue; }
#worldCols { grid-area: worldCols; background-color: lightgoldenrodyellow; }
#worldRows { grid-area: worldRows; background-color: violet; }
#worldCellsHolder { grid-area: worldCellsHolder; background-color: lightgreen; }

#sizePopContainer {
  display: grid;
  grid-template-areas: 'worldSizeLabel  worldSizeLabel worldSizeLabel'
                       'worldCols       worldRows      worldCellsHolder'; 
  grid-template-columns: 127px 108px autos;
  grid-template-rows: 20;
  width: 100%;
  grid-column-gap: 5px;
  grid-row-gap: 5px;  
  background-color: lightsteelblue;
}
/*
              <div  class='odd'>
                <div id='sizePopContainer'>
                  <div id='worldSizeLabelHolder'>Dish Size: </div>
                  <div id='worldCols'><input id='sizeCols' type='text' class='sizeInputClass' onchange='av.ptd.gridChange(this.value)'><div id='colPopWrap'>&nbsp;columns x&nbsp;</div></div>
                <div id='worldRows'><input id='sizeRows' type='text' class='sizeInputClass' onchange='av.ptd.gridChange(this.value)'><div id='rowPopWrap'>&nbsp;rows&nbsp;=&nbsp;</div></div>
                  <div id='worldCellsHolder'><label id='sizeCells'>There are 900 cells by default</label></div>
                  <div class='worldSpace'></div>
                </div>
              </div>

/*
web pages about style sheets that are changed with javascript
https://www.w3.org/wiki/Dynamic_style_-_manipulating_CSS_with_JavaScript
http://www.shawnolson.net/a/503/altering_css_class_attributes_with_javascript.html  //confusing
*/